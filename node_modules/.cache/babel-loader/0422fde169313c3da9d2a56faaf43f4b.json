{"ast":null,"code":"var _jsxFileName = \"/Users/jibrilkala/Documents/Challenges/twitter-clone/src/contex/auth-contex.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { account } from '../appwrite/appwriteConsig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  isAuthenticated: false\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userData, setUserData] = useState();\n  useEffect(() => {\n    const getUser = account.get();\n    getUser.then(res => {\n      setUserData(res);\n    }, err => {\n      console.log(err);\n    });\n  }, []);\n\n  if (userData) {\n    setIsAuthenticated(true);\n  } else {\n    setIsAuthenticated(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated: isAuthenticated\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"sLN4ftmyCeJH0uJ9+XXBG8rzpFc=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","account","AuthContext","isAuthenticated","AuthContextProvider","props","setIsAuthenticated","userData","setUserData","getUser","get","then","res","err","console","log","children"],"sources":["/Users/jibrilkala/Documents/Challenges/twitter-clone/src/contex/auth-contex.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport { account } from '../appwrite/appwriteConsig';\n\nconst AuthContext = createContext({\n    isAuthenticated: false,\n});\n\n\nexport const AuthContextProvider = (props) => {\n\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [userData, setUserData] = useState()\n\n        useEffect(() => {\n        const getUser = account.get()\n\n        getUser.then(res => {\n            setUserData(res)\n        }, err => {\n            console.log(err)\n        })\n\n    }, [])\n\n    if (userData) {\n        setIsAuthenticated(true);\n    } else {\n        setIsAuthenticated(false);\n    }\n\n\n\n    return <AuthContext.Provider value={{\n        isAuthenticated: isAuthenticated,\n    }}>\n        {props.children}\n    </AuthContext.Provider>;\n}\n\nexport default AuthContext;\n\n\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,OAAT,QAAwB,4BAAxB;;AAEA,MAAMC,WAAW,gBAAGJ,aAAa,CAAC;EAC9BK,eAAe,EAAE;AADa,CAAD,CAAjC;AAKA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;EAAA;;EAE1C,MAAM,CAACF,eAAD,EAAkBG,kBAAlB,IAAwCN,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,EAAxC;EAEID,SAAS,CAAC,MAAM;IAChB,MAAMU,OAAO,GAAGR,OAAO,CAACS,GAAR,EAAhB;IAEAD,OAAO,CAACE,IAAR,CAAaC,GAAG,IAAI;MAChBJ,WAAW,CAACI,GAAD,CAAX;IACH,CAFD,EAEGC,GAAG,IAAI;MACNC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACH,CAJD;EAMH,CATY,EASV,EATU,CAAT;;EAWJ,IAAIN,QAAJ,EAAc;IACVD,kBAAkB,CAAC,IAAD,CAAlB;EACH,CAFD,MAEO;IACHA,kBAAkB,CAAC,KAAD,CAAlB;EACH;;EAID,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAChCH,eAAe,EAAEA;IADe,CAA7B;IAAA,UAGFE,KAAK,CAACW;EAHJ;IAAA;IAAA;IAAA;EAAA,QAAP;AAKH,CA7BM;;GAAMZ,mB;;KAAAA,mB;AA+Bb,eAAeF,WAAf"},"metadata":{},"sourceType":"module"}