{"ast":null,"code":"var _jsxFileName = \"/Users/jibrilkala/Documents/Challenges/twitter-clone/src/contex/auth-contex.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useRef, useState } from \"react\";\nimport { account } from '../appwrite/appwriteConsig';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  isAuthenticated: false,\n  onLogOut: () => {},\n  onLogin: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userData, setUserData] = useState();\n  const emailInputRef = useRef('');\n  const passwordInputRef = useRef('');\n  useEffect(() => {\n    const getUser = account.get();\n    getUser.then(res => {\n      setUserData(res);\n    }, err => {\n      console.log(err);\n    });\n  }, []);\n\n  const logOutHandler = async () => {\n    try {\n      await account.deleteSession(\"current\");\n      setIsAuthenticated(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const longinHandler = async e => {\n    e.preventDefault();\n    const emailInput = emailInputRef.current.value;\n    const passwordInput = passwordInputRef.current.value;\n\n    try {\n      await account.createEmailSession(emailInput, passwordInput);\n      s;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated: userData,\n      onLogOut: logOutHandler,\n      onLogin: longinHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"E0/4exiwshDqkohx/c/HZwWo0zs=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useRef","useState","account","useNavigate","AuthContext","isAuthenticated","onLogOut","onLogin","AuthContextProvider","props","setIsAuthenticated","userData","setUserData","emailInputRef","passwordInputRef","getUser","get","then","res","err","console","log","logOutHandler","deleteSession","longinHandler","e","preventDefault","emailInput","current","value","passwordInput","createEmailSession","s","error","children"],"sources":["/Users/jibrilkala/Documents/Challenges/twitter-clone/src/contex/auth-contex.js"],"sourcesContent":["import { createContext, useEffect, useRef, useState } from \"react\";\nimport { account } from '../appwrite/appwriteConsig';\nimport { useNavigate } from \"react-router-dom\";\n\nconst AuthContext = createContext({\n    isAuthenticated: false,\n    onLogOut: () => {},\n    onLogin: () => {}\n});\n\n\nexport const AuthContextProvider = (props) => {\n\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [userData, setUserData] = useState()\n    const emailInputRef = useRef('')\n    const passwordInputRef = useRef('')\n\n    useEffect(() => {\n        const getUser = account.get()\n\n        getUser.then(res => {\n            setUserData(res)\n        }, err => {\n            console.log(err)\n        })\n\n    }, [])\n\n    const logOutHandler = async () => {\n        try {\n            await account.deleteSession(\"current\")\n            setIsAuthenticated(false)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    const longinHandler = async (e) => {\n        e.preventDefault()\n        \n        const emailInput = emailInputRef.current.value\n        const passwordInput = passwordInputRef.current.value\n\n        try {\n            await account.createEmailSession(emailInput, passwordInput)\n            s\n        } catch (error) {\n            console.log(error)\n    }}\n    \n\n\n\n    return <AuthContext.Provider value={{\n            isAuthenticated: userData,\n            onLogOut: logOutHandler,\n            onLogin: longinHandler\n        }}>\n        {props.children}\n    </AuthContext.Provider>;\n}\n\nexport default AuthContext;"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,MAAnC,EAA2CC,QAA3C,QAA2D,OAA3D;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,WAAW,gBAAGN,aAAa,CAAC;EAC9BO,eAAe,EAAE,KADa;EAE9BC,QAAQ,EAAE,MAAM,CAAE,CAFY;EAG9BC,OAAO,EAAE,MAAM,CAAE;AAHa,CAAD,CAAjC;AAOA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;EAAA;;EAE1C,MAAM,CAACJ,eAAD,EAAkBK,kBAAlB,IAAwCT,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,EAAxC;EACA,MAAMY,aAAa,GAAGb,MAAM,CAAC,EAAD,CAA5B;EACA,MAAMc,gBAAgB,GAAGd,MAAM,CAAC,EAAD,CAA/B;EAEAD,SAAS,CAAC,MAAM;IACZ,MAAMgB,OAAO,GAAGb,OAAO,CAACc,GAAR,EAAhB;IAEAD,OAAO,CAACE,IAAR,CAAaC,GAAG,IAAI;MAChBN,WAAW,CAACM,GAAD,CAAX;IACH,CAFD,EAEGC,GAAG,IAAI;MACNC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACH,CAJD;EAMH,CATQ,EASN,EATM,CAAT;;EAWA,MAAMG,aAAa,GAAG,YAAY;IAC9B,IAAI;MACA,MAAMpB,OAAO,CAACqB,aAAR,CAAsB,SAAtB,CAAN;MACAb,kBAAkB,CAAC,KAAD,CAAlB;IACH,CAHD,CAGE,OAAOS,GAAP,EAAY;MACVC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACH;EACJ,CAPD;;EASA,MAAMK,aAAa,GAAG,MAAOC,CAAP,IAAa;IAC/BA,CAAC,CAACC,cAAF;IAEA,MAAMC,UAAU,GAAGd,aAAa,CAACe,OAAd,CAAsBC,KAAzC;IACA,MAAMC,aAAa,GAAGhB,gBAAgB,CAACc,OAAjB,CAAyBC,KAA/C;;IAEA,IAAI;MACA,MAAM3B,OAAO,CAAC6B,kBAAR,CAA2BJ,UAA3B,EAAuCG,aAAvC,CAAN;MACAE,CAAC;IACJ,CAHD,CAGE,OAAOC,KAAP,EAAc;MACZb,OAAO,CAACC,GAAR,CAAYY,KAAZ;IACP;EAAC,CAXF;;EAgBA,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAC5B5B,eAAe,EAAEM,QADW;MAE5BL,QAAQ,EAAEgB,aAFkB;MAG5Bf,OAAO,EAAEiB;IAHmB,CAA7B;IAAA,UAKFf,KAAK,CAACyB;EALJ;IAAA;IAAA;IAAA;EAAA,QAAP;AAOH,CAlDM;;GAAM1B,mB;;KAAAA,mB;AAoDb,eAAeJ,WAAf"},"metadata":{},"sourceType":"module"}